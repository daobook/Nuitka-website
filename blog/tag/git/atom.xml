<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://nuitka.net</id>
  <title>Nuitka Blog - Posts tagged git</title>
  <updated>2022-02-10T04:27:08.504973+00:00</updated>
  <link href="https://nuitka.net"/>
  <link href="https://nuitka.net/blog/tag/git/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.23">ABlog</generator>
  <entry>
    <id>https://nuitka.net/posts/new-git-repository-to-sync-with-nuitka-releases.html</id>
    <title>New git repository to sync with Nuitka releases</title>
    <updated>2010-08-26T23:06:00+00:00</updated>
    <author>
      <name>Kay Hayen</name>
    </author>
    <content type="html">&lt;div class="section" id="new-git-repository-to-sync-with-nuitka-releases"&gt;

&lt;p&gt;For you git fans out there I have just added a new method to download
Nuitka from something I call the release git repository:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nuitka&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Nuitka&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then do your own modifications, and do:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;pull&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;rebase&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;each time there is a new release. You will be led through the merge
process as usual. To reduce your differences, feel free to send me the
patches you create with:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;patch&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and I will incorporate useful stuff.&lt;/p&gt;
&lt;div class="admonition-please-note admonition"&gt;
&lt;p class="admonition-title"&gt;Please note&lt;/p&gt;
&lt;p&gt;If you publish your own git repository, please be so kind and name it
“Nuitka-unofficial” or similar, or else it might be mistaken with the
real thing, and drop me a line about it, just so I know.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Kay Hayen&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="https://nuitka.net/posts/new-git-repository-to-sync-with-nuitka-releases.html" rel="alternate"/>
    <summary>For you git fans out there I have just added a new method to download
Nuitka from something I call the release git repository:</summary>
    <category term="git" label="git"/>
    <category term="Nuitka" label="Nuitka"/>
    <published>2010-08-26T23:06:00+00:00</published>
  </entry>
  <entry>
    <id>https://nuitka.net/posts/nuitka-pre-release-034pre1.html</id>
    <title>Nuitka Pre-Release 0.3.4pre1</title>
    <updated>2010-12-06T23:27:00+00:00</updated>
    <author>
      <name>Kay Hayen</name>
    </author>
    <content type="html">&lt;div class="section" id="nuitka-pre-release-0-3-4pre1"&gt;

&lt;p&gt;This pre-release of Nuitka has a focus on re-organizing the Nuitka
generated source code. Please see the page &lt;a class="reference external" href="/pages/overview.html"&gt;“What is Nuitka?”&lt;/a&gt; for clarification of what it is now and what it
wants to be.&lt;/p&gt;
&lt;p&gt;For a long time, Nuitka has generated a single C++ file, even when
embedding many modules into one. And it has always showed that the GNU
g++ compiler clearly has exponential compile time behavior when
translating these into the executable.&lt;/p&gt;
&lt;p&gt;This is no more the case. So this pre-release is mainly about making the
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;--deep&lt;/span&gt;&lt;/code&gt; feature useful. Before the release, I may look into
optimizations for speed again. Right now time is very short due to day
job reasons, so this pre-release is also about allowing people to use
the improvements that I have made and get some feedback about it.&lt;/p&gt;
&lt;div class="section" id="bug-fixes"&gt;
&lt;h2&gt;Bug fixes&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;None at all. Although I am sure that there may be regressions on the
options side. The tests of CPython 2.7 all pass still, but you may
find some breakage.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="cleanups"&gt;
&lt;h2&gt;Cleanups&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Static helpers source code has been moved to “.hpp” and “.cpp” files,
instead of being in “.py” files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Generated generated code for each module is now a separate file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Constants etc. go to their own file (although not named sensible yet)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="new-features"&gt;
&lt;h2&gt;New Features&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Uses Scons to make the build.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="new-tests"&gt;
&lt;h2&gt;New Tests&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;I have added ExtremClosure from the Python quiz. I feel it was not
covered by existing tests yet.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="organisational"&gt;
&lt;h2&gt;Organisational&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;There is now a new environment variable “NUITKA_SCONS” which should
point to the directory with the Scons file for Nuitka.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;create-environment.sh&lt;/span&gt;&lt;/code&gt; can now be sourced (if you are in the
top level directory of Nuitka) or be used with eval. In either case
it also reports what it does.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="numbers"&gt;
&lt;h2&gt;Numbers&lt;/h2&gt;
&lt;p&gt;None at this time. It likely didn’t change much at all. And I am not yet
using the link time optimization feature of the g++ compiler, so
potentially it should be worse than before at max.&lt;/p&gt;
&lt;p&gt;This release will be inside the “git” repository only. Check out &lt;a class="reference external" href="/pages/download.html"&gt;latest
version here&lt;/a&gt; to get it.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Yours,&lt;/div&gt;
&lt;div class="line"&gt;Kay Hayen&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://nuitka.net/posts/nuitka-pre-release-034pre1.html" rel="alternate"/>
    <summary>This pre-release of Nuitka has a focus on re-organizing the Nuitka
generated source code. Please see the page “What is Nuitka?” for clarification of what it is now and what it
wants to be.</summary>
    <category term="compiler" label="compiler"/>
    <category term="git" label="git"/>
    <category term="Nuitka" label="Nuitka"/>
    <category term="Python" label="Python"/>
    <published>2010-12-06T23:27:00+00:00</published>
  </entry>
  <entry>
    <id>https://nuitka.net/posts/nuitka-has-a-new-home---nuitkanet.html</id>
    <title>Nuitka has a new home - nuitka.net</title>
    <updated>2011-08-16T18:21:00+00:00</updated>
    <author>
      <name>Kay Hayen</name>
    </author>
    <content type="html">&lt;div class="section" id="nuitka-has-a-new-home-nuitka-net"&gt;

&lt;p&gt;Hello everybody,&lt;/p&gt;
&lt;p&gt;my new vServer is now online, the old site blog redirects to it now, and
planets follow the new site already. The old site is redirecting with
301 error code for some more time, hopefully this will be good enough of
a migration. It felt smooth from here, clearly, and the new site is much
faster of course, because it’s not throttled through my poor DSL
upstream.&lt;/p&gt;
&lt;p&gt;I also registered it a domain name &lt;a class="reference external" href="https://nuitka.net"&gt;“nuitka.net”&lt;/a&gt;
for it finally. Originally I wanted to give it a DynDNS name, but I
already have 2, and the third was supposed to cost money, and I didn’t
feel like using another service, or cheating them if you consider that
an option, so that was it, I bought the domain name. Clearly it will
also be easier for people to remember.&lt;/p&gt;
&lt;p&gt;Moving things over was pretty painless. The Wordpress software has a
pretty good export feature, which only didn’t manage the custom menu and
appearance settings. But I guess it’s about content anyway, so probably
some way that would work too, but it was easy enough to reproduce that
by hand. I appreciate Wordpress even more now.&lt;/p&gt;
&lt;p&gt;Also I did some tuning of the system, to use less memory. Only 512M are
available, and so I run less Apache processes for less requests (memory
leaks), disabled IPv6 (yes, hate me for it), reduced amounts of gettys,
and so on. Nothing I am not familiar with, the ARM machine had 512M as
well, and to me no reason to use the bigger package just because of
that.&lt;/p&gt;
&lt;p&gt;The main difference is the faster CPU, I seem to get 3Ghz Intel now,
instead of my 1Ghz ARM, which together with faster internet speed, makes
the site extremely fast.&lt;/p&gt;
&lt;p&gt;Now U will dare to make the &lt;a class="reference external" href="/gitweb/?p=Nuitka.git;a=summary"&gt;gitweb interface&lt;/a&gt; public as well. The git repository
is already running there.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;This is obsolete information, we use Github for this now.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;And I took the chance to sanitize the old posts somewhat. Changed the
links to not use the old domain name anymore, and correct some broken
ones too.&lt;/p&gt;
&lt;p&gt;Only downside is that I currently haven’t got the &lt;a class="reference external" href="https://speedcenter.nuitka.net"&gt;“speedcenter”&lt;/a&gt; up and running again. After losing my
hardware, the old data cannot be compared with new one, and then it
doesn’t feel like a priority right now. I seem to be working instead on
XML based regression tests of the optimizer: The output of “–dump-xml”
should be compared for a large quantity of files, to discover
regressions of the optimizer as soon as possible, this will enable me to
make changes and not have to review the C++ as much, to find out if
something is compiled correctly. This way I should detect it when known
good cases degrade, and generally to demonstrate better, what actually
did improve.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Yours,&lt;/div&gt;
&lt;div class="line"&gt;Kay Hayen&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;PS: Oh, you people, who wonder, “but why are you not using
Google/github/gitorious?”, my counter question: “Did you read the
agreement?” I did. It basically says (from Google code):&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mf"&gt;13.&lt;/span&gt; &lt;span class="n"&gt;INDEMNITY&lt;/span&gt;

&lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;agree&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;hold&lt;/span&gt; &lt;span class="n"&gt;harmless&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;indemnify&lt;/span&gt; &lt;span class="n"&gt;Google&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;its&lt;/span&gt; &lt;span class="n"&gt;subsidiaries&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;affiliates&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;officers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;agents&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;employees&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;advertisers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;licensors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;suppliers&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;partners&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collectively&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Google and Partners&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;and&lt;/span&gt; &lt;span class="n"&gt;against&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt; &lt;span class="n"&gt;third&lt;/span&gt; &lt;span class="n"&gt;party&lt;/span&gt; &lt;span class="n"&gt;claim&lt;/span&gt; &lt;span class="n"&gt;arising&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt; &lt;span class="n"&gt;way&lt;/span&gt; &lt;span class="n"&gt;related&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Google&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;violation&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Terms&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt; &lt;span class="n"&gt;connected&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Google&lt;/span&gt; &lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;including&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt; &lt;span class="n"&gt;liability&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;expense&lt;/span&gt; &lt;span class="n"&gt;arising&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;all&lt;/span&gt; &lt;span class="n"&gt;claims&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;losses&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;damages&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actual&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;consequential&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;suits&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;judgments&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;litigation&lt;/span&gt; &lt;span class="n"&gt;costs&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;attorneys&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; fees, of every kind and nature. In such a case, Google will provide you with written notice of such claim, suit or action.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;No thank you, instead I will run my own server, then I get to pay the
attorneys of my discretion - in the admittedly unlikely event that
somebody should sue me, because my Compiler violates some patent, or
whatever.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Yours,&lt;/div&gt;
&lt;div class="line"&gt;Kay&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://nuitka.net/posts/nuitka-has-a-new-home---nuitkanet.html" rel="alternate"/>
    <summary>Hello everybody,</summary>
    <category term="git" label="git"/>
    <category term="Nuitka" label="Nuitka"/>
    <category term="Python" label="Python"/>
    <published>2011-08-16T18:21:00+00:00</published>
  </entry>
  <entry>
    <id>https://nuitka.net/posts/nuitka-git-flow.html</id>
    <title>Nuitka git-flow</title>
    <updated>2011-10-01T08:37:00+00:00</updated>
    <author>
      <name>Kay Hayen</name>
    </author>
    <content type="html">&lt;div class="section" id="nuitka-git-flow"&gt;

&lt;p&gt;Hello there,&lt;/p&gt;
&lt;p&gt;this is to let you know that I have switched &lt;a class="reference external" href="/pages/overview.html"&gt;Nuitka&lt;/a&gt; to the &lt;a class="reference external" href="https://github.com/nvie/gitflow"&gt;“git flow”&lt;/a&gt; development model. That means, now
there is a supported stable version, and a develop branch, together with
feature branches.&lt;/p&gt;
&lt;div class="section" id="example"&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;div class="figure align-default" id="id1"&gt;
&lt;a class="reference external image-reference" href="/_images/Nuitka-git-flow.png"&gt;&lt;img alt="Git flow example for Nuitka release 0.3.12" src="../../_images/Nuitka-git-flow.png" style="width: 60%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;&lt;span class="caption-text"&gt;Git flow example for Nuitka release 0.3.12&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;In case, you want and can improve the source (link since removed)
visually or otherwise, please go
ahead. I am using it for a presentation next week too, and would be
glad if you could make it more pretty. My artistic skills are not the
same as my programmer skills. :-)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So there is now always at least these 2 branches:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Stable &lt;a class="reference external" href="https://nuitka.net/gitweb/?p=Nuitka.git;a=shortlog;h=refs/heads/master"&gt;(master branch)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unstable &lt;a class="reference external" href="https://nuitka.net/gitweb/?p=Nuitka.git;a=shortlog;h=refs/heads/develop"&gt;(develop branch)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and then there may be feature branches, like this one currently:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Feature branch &lt;a class="reference external" href="https://nuitka.net/gitweb/?p=Nuitka.git;a=shortlog;h=refs/heads/feature/minimize_CPython26_tests_diff"&gt;minimize_CPython26_tests_diff&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These will only have certain life, until they are completed, then they
are merge into “develop” and become part of the next release. This may
or may not happen, depending on how things go.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="benefits-of-the-new-model"&gt;
&lt;h2&gt;Benefits of the new model&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Hotfixes, typically bug fixes, can be made simultaneously on stable
and develop branch. The git-flow package takes care of the merging to
both.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Because that’s so easy now, a stable version can be provided and
supported for a longer time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Features can be published while under development. My idea is that
feature branches should basically work, but the bar will be lower.
People can have a look at them, or start their own and make me
integrate them.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="uses-of-feature-branch"&gt;
&lt;h2&gt;Uses of Feature Branch&lt;/h2&gt;
&lt;p&gt;For example, in the new feature branch, a couple of boring things are
happening. Support for frame stack will reduce the diff, as will some
work to match CPython’s choices for exception line numbers. Completing
will take a while, but should not block a release. So this is best done
in the feature branch, esp. as nothing is going to really depend on it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="general-picture"&gt;
&lt;h2&gt;General Picture&lt;/h2&gt;
&lt;p&gt;As you can see from this diagram, I am working mostly on documentation
things. The new and improved README on develop, which is closer to a
User Manual in PDF form, and other organization things, may get a
release before the PyCon DE next week. The README also describes this
process.&lt;/p&gt;
&lt;p&gt;Hope is that with this approach, I will improve transparency (you can
see earlier what i am working on, because there is now a place where
things may break (develop) or may not yet be integrated or completed
fully (feature branches) and yet be public.&lt;/p&gt;
&lt;p&gt;The overhead appears to minimal thanks to “git-flow”. Developing
hotfixes is actually easier, when done on the stable branch, because
problems cannot originate from the current development work that may or
may not be all that perfect yet.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Yours,&lt;/div&gt;
&lt;div class="line"&gt;Kay Hayen&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://nuitka.net/posts/nuitka-git-flow.html" rel="alternate"/>
    <summary>Hello there,</summary>
    <category term="git" label="git"/>
    <category term="Nuitka" label="Nuitka"/>
    <category term="Python" label="Python"/>
    <published>2011-10-01T08:37:00+00:00</published>
  </entry>
  <entry>
    <id>https://nuitka.net/posts/nuitka---pycon-de-video.html</id>
    <title>Nuitka - PyCON DE Video</title>
    <updated>2011-10-22T06:39:00+00:00</updated>
    <author>
      <name>Kay Hayen</name>
    </author>
    <content type="html">&lt;div class="section" id="nuitka-pycon-de-video"&gt;

&lt;p&gt;Hello everybody,&lt;/p&gt;
&lt;p&gt;the Video of my presentation is online:
&lt;a class="reference external" href="https://pyvideo.org/pycon-de-2011/nuitka-der-python-compiler.html"&gt;https://pyvideo.org/pycon-de-2011/nuitka-der-python-compiler.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Leaving it to Mike Müller to announce here the links to everything, when
it’s all finished. Thanks for the good work, the video was very well
done.&lt;/p&gt;
&lt;div class="admonition-update admonition"&gt;
&lt;p class="admonition-title"&gt;Update&lt;/p&gt;
&lt;p&gt;The video is also available via Youtube.&lt;/p&gt;
&lt;div class="video_wrapper" style=""&gt;
&lt;iframe allowfullscreen="true" src="https://www.youtube.com/embed/EYByCjptbhY" style="border: 0; height: 430px; width: 600px"&gt;
&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Yours,&lt;/div&gt;
&lt;div class="line"&gt;Kay&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
    <link href="https://nuitka.net/posts/nuitka---pycon-de-video.html" rel="alternate"/>
    <summary>Hello everybody,</summary>
    <category term="compiler" label="compiler"/>
    <category term="git" label="git"/>
    <category term="Nuitka" label="Nuitka"/>
    <category term="Python" label="Python"/>
    <category term="presentation" label="presentation"/>
    <category term="video" label="video"/>
    <published>2011-10-22T06:39:00+00:00</published>
  </entry>
  <entry>
    <id>https://nuitka.net/posts/nuitka-on-github-bitbucket-and-gitorious.html</id>
    <title>Nuitka on Github, Bitbucket and Gitorious</title>
    <updated>2013-04-26T07:17:16+00:00</updated>
    <author>
      <name>Kay Hayen</name>
    </author>
    <content type="html">&lt;div class="section" id="nuitka-on-github-bitbucket-and-gitorious"&gt;

&lt;p&gt;This is to let you know, that I have &lt;em&gt;finally&lt;/em&gt; carved in and created
accounts on all those “social” platforms, that deal with code. So far I
had resisted their terms (you pay us when we get sued), but I have given
up on that stance, it’s likely irrelevant, as Nuitka won’t get sued, and
if it is, those are not the issues.&lt;/p&gt;
&lt;p&gt;And I don’t want to feel too old school it seems. And who knows, maybe
this helps Nuitka to get more contributions.&lt;/p&gt;
&lt;p&gt;So these are the landing pages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bitbucket (since deleted)&lt;/p&gt;
&lt;p&gt;I kind of like the looks of it the most. Also it’s very popular for
Python people due to its Mercurial ties. I also liked that it
imported my Nuitka repository easily.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/kayhayen/Nuitka"&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Is not being on Github allowed these days? Anyway, from ease of use,
the interface looks more powerful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gitorious (since discontinued)&lt;/p&gt;
&lt;p&gt;The interface and looks definitely are worst. But it’s Free Software,
and an open platform, so it has to be in the list.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let me know what you think. I am going to push ‘develop’ at pre-release
and ‘master’ at release time, automatically from the release scripts
into all these. Hopefully that way, they turn out to be time savers no
wasters.&lt;/p&gt;
&lt;p&gt;And yes, I couldn’t decide on one. Since I fancy Free Software,
Gitorious probably would have won, but it would also miss the point of
expanding the reach. And for as long as I don’t use their issue tracking
or Wikis, it appears to be not necessary to make that decision.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;The preferred for use, and most up to date repository will remain
&lt;a class="reference external" href="/pages/download.html"&gt;the one from Downloads&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So fork away, like it, and stuff. Awaiting your pull requests…&lt;/p&gt;
&lt;/div&gt;
</content>
    <link href="https://nuitka.net/posts/nuitka-on-github-bitbucket-and-gitorious.html" rel="alternate"/>
    <summary>This is to let you know, that I have finally carved in and created
accounts on all those “social” platforms, that deal with code. So far I
had resisted their terms (you pay us when we get sued), but I have given
up on that stance, it’s likely irrelevant, as Nuitka won’t get sued, and
if it is, those are not the issues.</summary>
    <category term="Python" label="Python"/>
    <category term="Nuitka" label="Nuitka"/>
    <category term="git" label="git"/>
    <published>2013-04-26T07:17:16+00:00</published>
  </entry>
</feed>
