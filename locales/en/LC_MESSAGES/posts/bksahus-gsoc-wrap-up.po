# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-09 23:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:7
msgid "bksahu's GSoC warp up"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:9
msgid "Hello everyone!"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:11
msgid ""
"GSoC 2019 has almost come to an end! It's the time to wrap up this mega "
"event started back in May 2019. Under the mentorship of Mentor Hayen, my "
"learning experience has undergone a roller-coaster ride and it has not "
"only boosted my growth as a developer but also as an individual. Over the"
" last 3 months the following are my major contributions to this project:"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:20
msgid "Built-ins Optimizations"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:38
msgid "\"any\": `PR #246 <https://github.com/Nuitka/Nuitka/pull/246>`__"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:23
msgid ""
"`nuitka.nodes.BuiltinAnyNodes` node added to optimize the \"any\" built-"
"in."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:26
msgid ""
"Developed an algorithm to predict the \"any\" for arguments having "
"repetitive values at compile time. For example:"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:29
msgid "any([0]*255) -> False"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:31
msgid "any([False, False, True]) -> True"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:33
msgid "Extended support for `range`, `set` and `dict` built-ins."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:35
msgid "Added the optimized C side support too"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:37
msgid ""
"Added a method `getMetaClassBase` to make Python 2 and Python 3 "
"compatible while working with metaclasses."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:43
msgid ""
"Issue reported and closed `Issue #349 "
"<https://github.com/Nuitka/Nuitka/issues/349>`__"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:41
msgid ""
"Created a new module `nuitka.nodes.IterationHandles` to work with "
"iterables."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:43
msgid "Added support of Iteration for non-mutable types."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:60
msgid "\"all\": `PR #407 <https://github.com/Nuitka/Nuitka/pull/407>`__"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:46
msgid "Added `nuitka.nodes.BuiltinAllNodes` to optimize the \"all\" built-ins."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:49
msgid ""
"Developed an algorithm similar to \"any\" to predict the \"all\" "
"arguments. For example:"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:52
msgid "all([0, 0, 1]) -> False"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:54
msgid "all([True]*100) -> True"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:56
msgid "Other similar optimizations are done like \"any\" built-in."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:58
msgid ""
"Additionally, added a new testing module "
"`tests.optimizations.CommonOptimizations` to test the built-ins "
"optimizations at the same place."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:66
msgid "\"abs\": `PR #419 <https://github.com/Nuitka/Nuitka/pull/419>`__"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:63
msgid ""
"Added new operation node `ExpressionOperationAbs` to optimize the `abs` "
"built-in."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:65
msgid "Manually added `shapeSlotAbs` to different shapes."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:66
msgid "Finally pre-computed the compile time constant `abs`"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:103
msgid ""
"\"max\" and \"min\": `PR #442 "
"<https://github.com/Nuitka/Nuitka/pull/442>`__"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:69
msgid "This PR is work in progress and is half complete."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:71
msgid ""
"This is the first optimizations in which I used reformulations instead of"
" added in a new node."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:74
msgid "Pseudo-code of \"min\" reformulation:"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:103
msgid "Adding support for `keyfunc` is pending"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:142
msgid "\"zip\": `PR #462 <https://github.com/Nuitka/Nuitka/pull/462>`__"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:106
msgid ""
"This built-in uses both types of optimizations that the previous built-"
"ins optimizations used."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:108
msgid "`zip` for Python 2 uses the reformulations."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:109
msgid "Pseudo-code of \"zip\" reformulation:"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:140
msgid ""
"`zip` for Python 3 needs a new node that calls the `zip` because unlike "
"`zip` in Python 2, `zip` in Python 3 returns a `zipobject`."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:146
msgid "Test suite"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:162
msgid ""
"Search mode \"All\": `PR #378 "
"<https://github.com/Nuitka/Nuitka/pull/378>`__"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:149
msgid ""
"In the test suite, I added a new search mode \"all\" that will test all "
"the modules and return all the results at once. For example:"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:178
msgid ""
"Search mode \"Only\": `PR #333 "
"<https://github.com/Nuitka/Nuitka/pull/333>`__"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:165
msgid "Added \"only\" search mode to test only a single module. For example:"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:182
msgid ""
"Reported and closed Issue #334: `PR #336 "
"<https://github.com/Nuitka/Nuitka/pull/336>`__"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:181
msgid ""
"Fixed the autoformat bug by reading and writing the files in bytes "
"instead of string."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:186
msgid "Documentation"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:188
msgid ""
"Nuitka git work flow: `PR #485 "
"<https://github.com/Nuitka/Nuitka/pull/485>`__"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:191
msgid "And other minor doc fixes are added with their respective pull requests."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:195
msgid "What I learned"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:197
msgid "Learned the software engineering principles and how to keep my work clean."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:200
msgid ""
"I also learned how to effectively use software designing principles like "
"`DRY <https://en.wikipedia.org/wiki/Don%27t_repeat_yourself>`__ and `KISS"
" <https://en.wikipedia.org/wiki/KISS_principle>`__."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:204
msgid ""
"Got exposed to Nuitka internals which helped me to better understand how "
"compilers in general work."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:207
msgid "Explored how CPython works internally."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:209
msgid ""
"Got some great advice from Mentor Hayen about starting my professional "
"career in Software engineering."
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:212
msgid "Overall, it was a great experience to be a part of Nuitka :)"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:214
msgid "Yours,"
msgstr ""

#: ../../doc/posts/bksahus-gsoc-wrap-up.rst:215
msgid "Batakrishna"
msgstr ""

