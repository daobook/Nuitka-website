# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-09 23:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../doc/posts/nuitka-release-0310.rst:7
msgid "Nuitka Release 0.3.10"
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:9
msgid ""
"This is to inform you about the new stable release of `Nuitka "
"<https://nuitka.net>`_. It is the extremely compatible Python compiler, "
"`\"download now\" </doc/download.html>`_."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:13
msgid ""
"This new release is major milestone 2 work, enhancing practically all "
"areas of Nuitka. The focus was roundup and breaking new grounds with "
"structural optimization enhancements."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:19
msgid "Bug fixes"
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:21
msgid "Exceptions now correctly stack."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:23
msgid ""
"When you catch an exception, there always was the exception set, but "
"calling a new function, and it catching the exception, the values of "
"``sys.exc_info()`` didn't get reset after the function returned."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:27
msgid ""
"This was a small difference (of which there are nearly none left now) but"
" one that might effect existing code, which affects code that calls "
"functions in exception handling to check something about it."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:31
msgid ""
"So it's good this is resolved now too. Also because it is difficult to "
"understand, and now it's just like CPython behaves, which means that we "
"don't have to document anything at all about it."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:35
msgid ""
"Using ``exec`` in generator functions got fixed up. I realized that this "
"wouldn't work while working on other things. It's obscure yes, but it "
"ought to work."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:39
msgid ""
"Lambda generator functions can now be nested and in generator functions. "
"There were some problems here with the allocation of closure variables "
"that got resolved."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:43
msgid ""
"List contractions could not be returned by lambda functions. Also a "
"closure issue."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:46
msgid ""
"When using a mapping for globals to ``exec`` or ``eval`` that had a side "
"effect on lookup, it was evident that the lookup was made twice. "
"Correcting this also improves the performance for the normal case."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:52
msgid "Optimization"
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:54
msgid ""
"Statically raised as well as predicted exceptions are propagated upwards,"
" leading to code and block removal where possible, while maintaining the "
"side effects."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:58
msgid ""
"This is brand new and doesn't do everything possible yet. Most notable, "
"the matching of raised exception to handlers is not yet performed."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:62
msgid ""
"Built-in exception name references and creation of instances of them are "
"now optimized as well, which leads to faster exception raising/catching "
"for these cases."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:66
msgid ""
"More kinds of calls to built-ins are handled, positional parameters are "
"checked and more built-ins are covered."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:69
msgid ""
"Notable is that now checks are performed if you didn't potentially "
"overload e.g. the ``len`` with your own version in the module. Locally it"
" was always detected already. So it's now also safe."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:73
msgid ""
"All operations and comparisons are now simulated if possible and replaced"
" with their result."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:76
msgid ""
"In the case of predictable true or false conditions, not taken branches "
"are removed."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:79
msgid ""
"Empty branches are now removed from most constructs, leading to sometimes"
" cleaner code generated."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:84
msgid "Cleanups"
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:86
msgid ""
"Removed the lambda body node and replaced it with function body. This is "
"a great win for the split into body and builder. Regular functions and "
"lambda functions now only differ in how the created body is used."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:90
msgid ""
"Large cleanup of the operation/comparison code. There is now only use of "
"a simulator function, which exists for every operator and comparison. "
"This one is then used in a prediction call, shared with the built-in "
"predictions."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:95
msgid ""
"Added a ``Tracing`` module to avoid future imports of ``print_function``,"
" which annoyed me many times by causing syntax failures for when I "
"quickly added a print statement, not noting it must have the braces."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:100
msgid "PyLint is happier than ever."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:104
msgid "New Tests"
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:106
msgid ""
"Enhanced ``OverflowFunctions`` test to cover even deeper nesting of "
"overflow functions taking closure from each level. While it's not yet "
"working, this makes clearer what will be needed. Even if this code is "
"obscure, I would like to be that correct here."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:111
msgid "Made ``Operators`` test to cover the `` operator as well."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:113
msgid ""
"Added to ``ListContractions`` the case where a contraction is returned by"
" a lambda function, but still needs to leak its loop variable."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:117
msgid ""
"Enhanced ``GeneratorExpressions`` test to cover lambda generators, which "
"is really crazy code:"
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:125
msgid ""
"Added to ``ExecEval`` a case where the ``exec`` is inside a generator, to"
" cover that too."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:128
msgid "Activated the testing of ``sys.exc_info()`` in ``ExceptionRaising`` test."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:131
msgid ""
"This was previously commented out, and now I added stuff to illustrate "
"all of the behavior of CPython there."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:134
msgid ""
"Enhanced ``ComparisonChains`` test to demonstrate that the order of "
"evaluations is done right and that side effects are maintained."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:137
msgid ""
"Added ``BuiltinOverload`` test to show that overloaded built-ins are "
"actually called and not the optimized version. So code like this has to "
"print 2 lines:"
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:156
msgid "Organisational"
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:158
msgid ""
"Changed \"README.txt\" to no longer say that \"Scons\" is a requirement. "
"Now that it's included (patched up to work with ``ctypes`` on Windows), "
"we don't have to say that anymore."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:162
msgid "Documented the status of optimization and added some more ideas."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:164
msgid ""
"There is now an option to dump the node tree after optimization as XML. "
"Not currently use, but is for regression testing, to identify where new "
"optimization and changes have an impact. This make it more feasible to be"
" sure that Nuitka is only becoming better."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:169
msgid ""
"Executable with Python3 again, although it won't do anything, the "
"necessary code changes were done."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:174
msgid "Summary"
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:176
msgid ""
"It's nice to see, that I some long standing issues were resolved, and "
"that structural optimization has become almost a reality."
msgstr ""

#: ../../doc/posts/nuitka-release-0310.rst:179
msgid ""
"The difficult parts of exception propagation are all in place, now it's "
"only details. With that we can eliminate and predict even more of the "
"stupid code of \"pybench\" at compile time, achieving more infinite "
"speedups."
msgstr ""

