# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-09 23:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../doc/posts/nuitka-release-036.rst:7
msgid "Nuitka Release 0.3.6"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:9
msgid ""
"This is to inform you about the new stable release of `Nuitka "
"<https://nuitka.net>`_. It is the extremely compatible Python compiler, "
"`\"download now\" </doc/download.html>`_."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:13
msgid ""
"The major point this for this release is cleanup work, and generally bug "
"fixes, esp. in the field of importing. This release cleans up many small "
"open ends of Nuitka, closing quite a bunch of consistency ``TODO`` items,"
" and then aims at cleaner structures internally, so optimization analysis"
" shall become \"easy\". It is a correctness and framework release, not a "
"performance improvement at all."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:22
msgid "Bug fixes"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:24
msgid ""
"Imports were not respecting the ``level`` yet. Code like this was not "
"working, now it is:"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:31
msgid ""
"Absolute and relative imports were e.g. both tried all the time, now if "
"you specify absolute or relative imports, it will be attempted in the "
"same way than CPython does. This can make a difference with "
"compatibility."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:36
#, python-format
msgid ""
"Functions with a \"locals dict\" (using ``locals`` built-in or ``exec`` "
"statement) were not 100% compatible in the way the locals dictionary was "
"updated, this got fixed. It seems that directly updating a dict is not "
"what CPython does at all, instead it only pushes things to the "
"dictionary, when it believes it has to. Nuitka now does the same thing, "
"making it faster and more compatible at the same time with these kind of "
"corner cases."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:44
msgid ""
"Nested packages didn't work, they do now. Nuitka itself is now "
"successfully using nested packages (e.g. "
"``nuitka.transform.optimizations``)"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:50
msgid "New Features"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:52
msgid ""
"The ``--lto`` option becomes usable. It's not measurably faster "
"immediately, and it requires g++ 4.6 to be available, but then it at "
"least creates smaller binaries and may provide more optimization in the "
"future."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:59
msgid "Optimization"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:61
msgid ""
"Exceptions raised by pre-computed built-ins, unpacking, etc. are now "
"transformed to raising the exception statically."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:66
msgid "Cleanups"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:68
msgid ""
"There is now a ``getVariableForClosure`` that a variable provider can "
"use. Before that it guessed from ``getVariableForReference`` or "
"``getVariableForAssignment`` what might be the intention. This makes some"
" corner cases easier."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:73
msgid ""
"Classes, functions and lambdas now also have separate builder and body "
"nodes, which enabled to make getSameScopeNodes() really simple. Either "
"something has children which are all in a new scope or it has them in the"
" same scope."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:78
msgid ""
"Twisted workarounds like ``TransitiveProvider`` are no longer needed, "
"because class builder and class body were separated."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:81
msgid ""
"New packages ``nuitka.transform.optimizations`` and "
"``nuitka.transform.finalizations``, where the first was "
"``nuitka.optimizations`` before. There is also code in "
"``nuitka.transform`` that was previously in a dedicated module. This "
"allowed to move a lot of displaced code."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:87
msgid ""
"``TreeBuilding`` now has fast paths for all 3 forms, things that need a "
"\"provider\", \"node\", and \"source_ref\"; things that need \"node\" and"
" \"source_ref\"; things that need nothing at all, e.g. pass."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:91
msgid ""
"Variables now avoid building duplicated instances, but instead share one."
" Better for analysis of them."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:96
msgid "New Tests"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:98
msgid ""
"The Python 2.7 test suite is no longer run with Python 2.6 as it will "
"just crash with the same exception all the time, there is no "
"``importlib`` in 2.6, but every test is using that through test_support."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:103
msgid "Nested packages are now covered with tests too."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:105
msgid "Imports of upper level packages are covered now too."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:109
msgid "Organisational"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:111
msgid "Updated the \"README.txt\" with the current plan on optimization."
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:115
msgid "Numbers"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:117
msgid "python 2.6:"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:124
msgid "Nuitka 0.3.6 (driven by python 2.6):"
msgstr ""

#: ../../doc/posts/nuitka-release-036.rst:131
#, python-format
msgid ""
"This is 109% for 0.3.6, but no change from the previous release. No "
"surprise, because no new effective new optimization means have been "
"implemented. Stay tuned for future release for actual progress."
msgstr ""

