# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-09 23:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../doc/posts/nuitka-release-0511.rst:7
msgid "Nuitka Release 0.5.11"
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:9
msgid ""
"This is to inform you about the new stable release of `Nuitka "
"<https://nuitka.net>`_. It is the extremely compatible Python compiler, "
"`\"download now\" </doc/download.html>`_."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:13
msgid ""
"The last release represented a significant change and introduced a few "
"regressions, which got addressed with hot fix releases. But it also had a"
" focus on cleaning up open optimization issues that were postponed in the"
" last release."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:20
msgid "New Features"
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:22
msgid ""
"The filenames of source files as found in the ``__file__`` attribute are "
"now made relative for all modes, not just standalone mode."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:25
msgid ""
"This makes it possible to put data files along side compiled modules in a"
" deployment."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:30
msgid "Bug Fixes"
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:32
msgid "Local functions that reference themselves were not released. They now are."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:41
msgid ""
"Recent changes to code generation attached closure variable values to the"
" function object, so now they can be properly visited. Fixed in 0.5.10.1 "
"already."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:45
msgid ""
"Python2.6: The complex constants with real or imaginary parts ``-0.0`` "
"were collapsed with constants of value ``0.0``. This became more evident "
"after we started to optimize the ``complex`` built-in. Fixed in 0.5.10.1 "
"already."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:55
msgid ""
"Complex call helpers could leak references to their arguments. This was a"
" regression. Fixed in 0.5.10.1 already."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:58
msgid ""
"Parameter variables offered as closure variables were not properly "
"released, only the cell object was, but not the value. This was a "
"regression. Fixed in 0.5.10.1 already."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:62
msgid ""
"Compatibility: The exception type given when accessing local variable "
"values not initialized in a closure taking function, needs to be "
"``NameError`` and ``UnboundLocalError`` for accesses in the providing "
"function. Fixed in 0.5.10.1 already."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:67
msgid ""
"Fix support for \"venv\" on systems, where the system Python uses "
"symbolic links too. This is the case on at least on Mageia Linux. Fixed "
"in 0.5.10.2 already."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:71
msgid ""
"Python3.4: On systems where ``long`` and ``Py_ssize_t`` are different "
"(e.g. Win64) iterators could be corrupted if used by uncompiled Python "
"code. Fixed in 0.5.10.2 already."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:75
msgid ""
"Fix, generator objects didn't release weak references to them properly. "
"Fixed in 0.5.10.2 already."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:78
msgid ""
"Compatibility: The ``__closure__`` attributes of functions was so far not"
" supported, and rarely missing. Recent changes made it easy to expose, so"
" now it was added."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:82
msgid ""
"macOS: A linker warning about deprecated linker option ``-s`` was solved "
"by removing the option."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:85
msgid ""
"Compatibility: Nuitka was enforcing that the ``__doc__`` attribute to be "
"a string object, and gave a misleading error message. This check must not"
" be done though, ``__doc__`` can be any type in Python."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:91
msgid "Optimization"
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:93
msgid ""
"Variables that need not be shared, because the uses in closure taking "
"functions were eliminated, no longer use cell objects."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:96
msgid ""
"The ``try``/``except`` and ``try``/``finally`` statements now both have "
"actual merging for SSA, allowing for better optimization of code behind "
"it."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:114
msgid ""
"Since ``try``/``finally`` is used in almost all re-formulations of "
"complex Python constructs this is improving SSA application widely. The "
"uses of ``try``/``except`` in user code will no longer degrade "
"optimization and code generation efficiency as much as they did."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:119
msgid ""
"The ``try``/``except`` statement now reduces the scope of tried block if "
"possible. When no statement raised, already the handling was removed, but"
" leading and trailing statements that cannot raise, were not considered."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:135
msgid "This is now optimized to."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:148
msgid ""
"The impact may on execution speed may be marginal, but it is definitely "
"going to improve the branch merging to be added later. Note that ``c`` "
"can only be optimized, because the exception handler is aborting, "
"otherwise it would change behaviour."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:153
msgid ""
"The creation of code objects for standalone mode and now all code objects"
" was creating a distinct filename object for every function in a module, "
"despite them being same content. This was wasteful for module loading. "
"Now it's done only once."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:158
msgid ""
"Also, when having multiple modules, the code to build the run time "
"filename used for code objects, was calling import logic, and doing "
"lookups to find ``os.path.join`` again and again. These are now cached, "
"speeding up the use of many modules as well."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:165
msgid "Cleanups"
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:167
msgid ""
"Nuitka used to have \"variable usage profiles\" and still used them to "
"decide if a global variable is written to, in which case, it stays away "
"from doing optimization of it to built-in lookups, and later calls."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:172
msgid ""
"The have been replaced by \"global variable traces\", which collect the "
"traces to a variable across all modules and functions. While this is now "
"only a replacement, and getting rid of old code, and basing on SSA, later"
" it will also allow to become more correct and more optimized."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:178
msgid ""
"The standalone now queries its hidden dependencies from a plugin "
"framework, which will become an interface to Nuitka internals in the "
"future."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:184
msgid "Testing"
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:186
msgid ""
"The use of deep hashing of constants allows us to check if constants "
"become mutated during the run-time of a program. This allows to discover "
"corruption should we encounter it."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:190
msgid ""
"The tests of CPython are now also run with Python in debug mode, but only"
" on Linux, enhancing reference leak coverage."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:193
msgid ""
"The CPython test parts which had been disabled due to reference cycles "
"involving compiled functions, or usage of ``__closure__`` attribute, were"
" reactivated."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:199
msgid "Organisational"
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:201
msgid ""
"Since Google Code has shutdown, it has been removed from the Nuitka git "
"mirrors."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:206
msgid "Summary"
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:208
msgid ""
"This release brings exciting new optimization with the focus on the "
"``try`` constructs, now being done more optimal. It is also a maintenance"
" release, bringing out compatibility improvements, and important bug "
"fixes, and important usability features for the deployment of modules and"
" packages, that further expand the use cases of Nuitka."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:214
msgid ""
"The git flow had to be applied this time to get out fixes for regression "
"bug fixes, that the big change of the last release brought, so this is "
"also to consolidate these and the other corrections into a full release "
"before making more invasive changes."
msgstr ""

#: ../../doc/posts/nuitka-release-0511.rst:219
msgid ""
"The cleanups are leading the way to expanded SSA applied to global "
"variable and shared variable values as well. Already the built-in detect "
"is now based on global SSA information, which was an important step "
"ahead."
msgstr ""

