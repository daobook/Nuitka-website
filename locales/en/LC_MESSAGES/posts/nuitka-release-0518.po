# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-09 23:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../doc/posts/nuitka-release-0518.rst:7
msgid "Nuitka Release 0.5.18"
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:9
msgid ""
"This is to inform you about the new stable release of `Nuitka "
"<https://nuitka.net>`_. It is the extremely compatible Python compiler, "
"`\"download now\" </doc/download.html>`_."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:13
msgid ""
"This release mainly has a scalability focus. While there are few "
"compatibility improvements, the larger goal has been to make Nuitka "
"compilation and the final C compilation faster."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:19
msgid "Bug Fixes"
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:21
msgid ""
"Compatibility: The nested arguments functions can now be called using "
"their keyword arguments."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:32
msgid ""
"Compatibility: Generators with Python3.4 or higher now also have a "
"``__del__`` attribute, and therefore properly participate in "
"finalization. This should improve their interactions with garbage "
"collection reference cycles, although no issues had been observed so far."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:38
msgid ""
"Windows: Was outputting command line arguments debug information at "
"program start. Fixed in 0.5.17.1 already."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:43
msgid "Optimization"
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:45
msgid ""
"Code generated for parameter parsing is now a *lot* less verbose. Python "
"level loops and conditionals to generate code for each variable has been "
"replaced with C level generic code. This will speed up the backend "
"compilation by a lot."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:50
msgid ""
"Function calls with constant arguments were speed up specifically, as "
"their call is now fully prepared, and yet using less code. Variable "
"arguments are also faster, and all defaulted arguments are also much "
"faster. Method calls are not affected by these improvements though."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:55
msgid ""
"Nested argument functions now have a quick call entry point as well, "
"making them faster to call too."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:58
msgid ""
"The ``slice`` built-in, and internal creation of slices (e.g. in re-"
"formulations of Python3 slices as subscripts) cannot raise."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:61
msgid ""
"Standalone: Avoid inclusion of bytecode of ``unittest.test``, "
"``sqlite3.test``, ``distutils.test``, and ``ensurepip``. These are not "
"needed, but simply bloat the amount of bytecode used on e.g. macOS."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:66
msgid ""
"Speed up compilation with Nuitka itself by avoid to copying and "
"constructing variable lists as much as possible using an always accurate "
"variable registry."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:72
msgid "Cleanups"
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:74
msgid ""
"Nested argument functions of Python2 are now re-formulated into a "
"wrapping function that directly calls the actual function body with the "
"unpacking of nested arguments done in nodes explicitly. This allows for "
"better optimization and checks of these steps and potential in-lining of "
"these functions too."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:80
msgid ""
"Unified slice object creation and built-in ``slice`` nodes, these were "
"two distinct nodes before."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:83
msgid ""
"The code generation for all statement kinds is now done via dispatching "
"from a dictionary instead of long ``elif`` chains."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:86
msgid ""
"Named nodes more often consistently, e.g. all loop related nodes start "
"with ``Loop`` now, making them easier to group."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:89
msgid ""
"Parameter specifications got simplified to work without variables where "
"it is possible."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:94
msgid "Organisational"
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:96
msgid "Nuitka is now available on the social code platforms gitlab as well."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:100
msgid "Summary"
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:102
msgid ""
"Long standing weaknesses have been addressed in this release, also quite "
"a few structural cleanups have been performed, e.g. strengthening the "
"role of the variable registry to always be accurate, is groundlaying to "
"further improvement of optimization."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:107
msgid ""
"However, this release cycle was mostly dedicated to performance of the "
"actual compilation, and more accurate information was needed to e.g. not "
"search for information that should be instant."
msgstr ""

#: ../../doc/posts/nuitka-release-0518.rst:111
msgid ""
"Upcoming releases will focus on usability issues and further "
"optimization, it was nice however to see speedups of created code even "
"from these scalability improvements."
msgstr ""

