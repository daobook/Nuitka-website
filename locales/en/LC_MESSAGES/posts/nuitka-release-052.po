# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-09 23:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../doc/posts/nuitka-release-052.rst:7
msgid "Nuitka Release 0.5.2"
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:9
msgid ""
"This is to inform you about the new stable release of `Nuitka "
"<https://nuitka.net>`_. It is the extremely compatible Python compiler, "
"`\"download now\" </doc/download.html>`_."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:13
msgid ""
"This is a major release, with huge changes to code generation that "
"improve performance in a significant way. It is a the result of a long "
"development period, and therefore contains a huge jump ahead."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:19
msgid "New Features"
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:21
msgid ""
"Added experimental support for Python 3.4, which is still work in "
"progress."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:24
msgid "Added support for virtualenv on macOS."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:26
msgid "Added support for virtualenv on Windows."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:28
msgid "Added support for macOS X standalone mode."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:30
msgid ""
"The code generation uses no header files anymore, therefore adding a "
"module doesn't invalidate all compiled object files from caches anymore."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:34
msgid ""
"Constants code creation is now distributed, and constants referenced in a"
" module are declared locally. This means that changing a module doesn't "
"affect the validity of other modules object files from caches anymore."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:41
msgid "Optimization"
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:43
msgid ""
"C-ish code generation uses less C++ classes and generates more C-like "
"code. Explicit temporary objects are now used for statement temporary "
"variables."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:47
msgid ""
"The constants creation code is no more in a single file, but distributed "
"across all modules, with only shared values created in a single file. "
"This means improved scalability. There are remaining bad modules, but "
"more often, standalone mode is now fast."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:52
msgid ""
"Exception handling no longer uses C++ exception, therefore has become "
"much faster."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:55
msgid "Loops that only break are eliminated."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:57
msgid "Dead code after loops that do not break is now removed."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:59
msgid ""
"The ``try``/``finally`` and ``try``/``except`` constructs are now "
"eliminated, where that is possible."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:62
msgid ""
"The ``try``/``finally`` part of the re-formulation for ``print`` "
"statements is now only done when printing to a file, avoiding useless "
"node tree bloat."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:66
msgid "Tuples and lists are now generated with faster code."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:68
msgid "Locals and global variables are now access with more direct code."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:70
msgid "Added support for the anonymous ``code`` type built-in."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:72
msgid "Added support for ``compile`` built-in."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:74
msgid ""
"Generators that statically return immediately, e.g. due to optimization "
"results, are no longer using frame objects."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:77
msgid ""
"The complex call helpers use no pseudo frames anymore. Previous code "
"generation required to have them, but with C-ish code generation that is "
"no more necessary, speeding up those kind of calls."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:81
msgid ""
"Modules with only code that cannot raise, need not have a frame created "
"for them. This avoids useless code size bloat because of them. Previously"
" the frame stack entry was mandatory."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:87
msgid "Bug Fixes"
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:89
msgid ""
"Windows: The resource files were cached by Scons and re-used, even if the"
" input changed. The could lead to corrupted incremental builds. Fixed in "
"0.5.1.1 already."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:93
msgid ""
"Windows: For functions with too many local variables, the MSVC failed "
"with an error \"C1026: parser stack overflow, program too complex\". The "
"rewritten code generation doesn't burden the compiler as much."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:97
msgid ""
"Compatibility: The timing deletion of nested call arguments was different"
" from C++. This shortcoming has been addressed in the rewritten code "
"generation."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:101
msgid ""
"Compatibility: The ``__future__`` flags and ``CO_FREECELL`` were not "
"present in frame flags. These were then not always properly inherited to "
"``eval`` and ``exec`` in all cases."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:105
msgid ""
"Compatibility: Compiled frames for Python3 had ``f_restricted`` "
"attribute, which is Python2 only. Removed it."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:108
msgid ""
"Compatibility: The ``SyntaxError`` of having a ``continue`` in a finally "
"clause is now properly raised."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:111
msgid ""
"Python2: The ``exec`` statement with no locals argument provided, was "
"preventing list contractions to take closure variables."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:114
msgid "Python2: Having the ASCII encoding declared in a module wasn't working."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:117
msgid "Standalone: Included the ``idna`` encoding as well."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:119
msgid ""
"Standalone: For virtualenv, the file ``orig-prefix.txt`` needs to be "
"present, now it's copied into the \"dist\" directory as well. Fixed in "
"0.5.1.1 already."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:123
msgid ""
"Windows: Handle cases, where Python and user program are installed on "
"different volumes."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:126
msgid ""
"Compatibility: Can now finally use ``execfile`` as an expression. One of "
"our oldest issues, no 5, is finally fixed after all this time thanks to "
"C-ish code generation."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:130
msgid ""
"Compatibility: The order or call arguments deletion is now finally "
"compatible. This too is thanks to C-ish code generation."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:133
msgid "Compatibility: Code object flags are now more compatible for Python3."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:135
msgid ""
"Standalone: Removing \"rpath\" settings of shared libraries and extension"
" modules included. This makes standalone binaries more robust on Fedora "
"20."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:139
msgid ""
"Python2: Wasn't falsely rejecting ``unicode`` strings as values for "
"``int`` and ``long`` variants with base argument provided."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:142
msgid ""
"Windows: For Python3.2 and 64 bits, global variable accesses could give "
"false ``NameError`` exceptions. Fixed in 0.5.1.6 already."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:145
msgid ""
"Compatibility: Many ``exec`` and ``eval`` details have become more "
"correctly, the argument handling is more compatible, and e.g. future "
"flags are now passed along properly."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:149
msgid ""
"Compatibility: Using ``open`` with no arguments is now giving the same "
"error."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:154
msgid "Organisational"
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:156
msgid "Replying to email from the issue tracker works now."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:158
msgid "Added option name alias ``--xml`` for ``--dump-xml``."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:160
msgid ""
"Added option name alias ``--python-dbg`` for ``--python-debug``, which "
"actually might make it a bit more clear that it is about using the "
"CPython debug run time."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:164
msgid ""
"Remove option ``--dump-tree``, it had been broken for a long time and "
"unused in favor of XML dumps."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:167
msgid ""
"New digital art folder with 3D version of Nuitka logo. Thanks to Juan "
"Carlos for creating it."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:170
msgid ""
"Using \"README.rst\" instead of \"README.txt\" to make it look better on "
"web pages."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:173
msgid ""
"More complete whitelisting of missing imports in standard library. These "
"should give no warnings anymore."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:176
msgid "Updated the Nuitka GUI to the latest version, with enhanced features."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:178
msgid ""
"The builds of releases and update of the `downloads page "
"<https://nuitka.net/doc/download.html>`__ is now driven by Buildbot. Page"
" will be automatically updated as updated binaries arrive."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:184
msgid "Cleanups"
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:186
msgid ""
"Temporary keeper variables and the nodes to handle them are now unified "
"with normal temporary variables, greatly simplifying variable handling on"
" that level."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:190
msgid ""
"Less code is coming from templates, more is actually derived from the "
"node tree instead."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:193
msgid ""
"Releasing the references to temporary variables is now always explicit in"
" the node tree."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:196
msgid ""
"The publishing and preservation of exceptions in frames was turned into "
"explicit nodes."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:199
msgid ""
"Exception handling is now done with a single handle that checks with "
"branches on the exception. This eliminates exception handler nodes."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:202
msgid ""
"The ``dir`` built-in with no arguments is now re-formulated to ``locals``"
" or ``globals`` with their ``.keys()`` attribute taken."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:205
msgid ""
"Dramatic amounts of cleanups to code generation specialities, that got "
"done right for the new C-ish code generation."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:210
msgid "New Tests"
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:212
msgid ""
"Warnings from MSVC are now error exits for ``--debug`` mode too, "
"expanding the coverage of these tests."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:215
msgid ""
"The outputs with ``python-dbg`` can now also be compared, allowing to "
"expand test coverage for reference counts."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:218
msgid ""
"Many of the basic tests are now executable with Python3 directly. This "
"allows for easier debug."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:221
msgid "The library compilation test is now also executed with Python3."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:225
msgid "Summary"
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:227
msgid ""
"This release would deserve more than a minor number increase. The C-ish "
"code generation, is a huge body of work. In many ways, it lays ground to "
"taking benefit of SSA results, that previously would not have been "
"possible. In other ways, it's incomplete in not yet taking full advantage"
" yet."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:233
msgid ""
"The release contains so many improvements, that are not yet fully "
"realized, but as a compiler, it also reflects a stable and improved "
"state."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:237
msgid ""
"The important changes are about making SSA even more viable. Many of the "
"problematic cases, e.g. exception handlers, have been stream lined. A "
"whole class of variables, temporary keepers, has been eliminated. This is"
" big news in this domain."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:242
msgid ""
"For the standalone users, there are lots of refinements. There is esp. a "
"lot of work to create code that doesn't show scalability issues. While "
"some remain, the most important problems have been dealt with. Others are"
" still in the pipeline."
msgstr ""

#: ../../doc/posts/nuitka-release-052.rst:247
msgid ""
"More work will be needed to take full advantage. This has been explained "
"in a `separate post <https://nuitka.net/posts/state-of-nuitka.html>`__ in"
" greater detail."
msgstr ""

