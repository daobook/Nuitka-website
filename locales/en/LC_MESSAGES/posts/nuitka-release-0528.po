# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-09 23:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../doc/posts/nuitka-release-0528.rst:7
msgid "Nuitka Release 0.5.28"
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:9
msgid ""
"This is to inform you about the new stable release of `Nuitka "
"<https://nuitka.net>`_. It is the extremely compatible Python compiler, "
"`\"download now\" </doc/download.html>`_."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:13
msgid ""
"This release has a focus on compatibility work and contains bug fixes and"
" work to enhance the usability of Nuitka by integrating with distutils. "
"The major improvement is that contractions no longer use pseudo functions"
" to achieve their own local scope, but that there is now a dedicated "
"structure for that representing an in-lined function."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:21
msgid "Bug Fixes"
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:23
msgid ""
"Python3.6: Fix, ``async for`` was not yet implemented for async "
"generators."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:26
msgid ""
"Fix, functions with keyword arguments where the value was determined to "
"be a static raise could crash the compiler."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:29
msgid ""
"Detect using MinGW64 32 bits C compiler being used with 64 bits Python "
"with better error message."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:32
msgid ""
"Fix, when extracting side effects of a static raise, extract them more "
"recursively to catch expressions that themselves have no code generation "
"being used. This fixes at least static raises in keyword arguments of a "
"function call."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:37
msgid ""
"Compatibility: Added support for proper operation of ``pkgutil.get_data``"
" by implementing ``get_data`` in our meta path based loader."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:41
msgid ""
"Compatibility: Added ``__spec__`` module attribute was previously "
"missing, present on Python3.4 and higher."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:44
msgid ""
"Compatibility: Made ``__loader__`` module attribute set when the module "
"is loading already."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:47
msgid ""
"Standalone: Resolve the ``@rpath`` and ``@loader_path`` from ``otool`` on"
" macOS manually to actual paths, which adds support for libraries "
"compiled with that."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:51
msgid "Fix, nested functions calling ``super`` could crash the compiler."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:53
msgid ""
"Fix, could not use ``--recurse-directory`` with arguments that had a "
"trailing slash."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:56
msgid ""
"Fix, using ``--recurse-directory`` on packages that are not in the search"
" crashed the compiler."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:59
msgid ""
"Compatibility: Python2 ``set`` and ``dict`` contractions were using extra"
" frames like Python3 does, but those are not needed."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:62
msgid ""
"Standalone: Fix, the way ``PYTHONHOME`` was set on Windows had no effect,"
" which allowed the compiled binary to access the original installation "
"still."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:66
msgid ""
"Standalone: Added some newly discovered missing hidden dependencies of "
"extension modules."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:69
msgid ""
"Compatibility: The name mangling of private names (e.g. ``__var``) in "
"classes was applied to variable names, and function declarations, but not"
" to classes yet."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:73
msgid ""
"Python3.6: Fix, added support for list contractions with ``await`` "
"expressions in async generators."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:76
msgid "Python3.6: Fix, ``async for`` was not working in async generators yet."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:79
msgid ""
"Fix, for module tracebacks, we output the module name ``<module name``> "
"instead of merely ``<module>``, but if the module was in a package, that "
"was not indicated. Now it is ``<module package.name>``."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:83
msgid ""
"Windows: The cache directory could be unicode which then failed to pass "
"as an argument to scons. We now encode such names as UTF-8 and decode in "
"Scons afterwards, solving the problem in a generic way."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:87
msgid ""
"Standalone: Need to recursively resolve shared libraries with ``ldd``, "
"otherwise not all could be included."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:90
msgid ""
"Standalone: Make sure ``sys.path`` has no references to CPython compile "
"time paths, or else things may work on the compiling machine, but not on "
"another."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:94
msgid "Standalone: Added various missing dependencies."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:96
msgid ""
"Standalone: Wasn't considering the DLLs directory for standard library "
"extensions for freezing, which would leave out these."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:99
msgid ""
"Compatibility: For ``__future__`` imports the ``__import__`` function was"
" called more than once."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:104
msgid "Optimization"
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:106
msgid ""
"Contractions are now all properly inlined and allow for optimization as "
"if they were fully local. This should give better code in some cases."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:110
msgid ""
"Classes are now all building their locals dictionary inline to the using "
"scope, allowing for more compact code."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:113
msgid ""
"The dictionary API was not used in module template code, although it "
"helps to generate more compact code."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:118
msgid "New Features"
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:120
msgid "Experimental support for building platform dependent wheel distribution."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:127
msgid "Use with caution, this is incomplete work."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:129
msgid ""
"Experimental support for running tests against compiled installation with"
" ``nose`` and ``py.test``."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:132
msgid ""
"When specifying what to recurse to, now patterns can be used, e.g. like "
"this ``--recurse-not-to=*.tests`` which will skip all tests in submodules"
" from compilation."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:136
msgid ""
"By setting ``NUITKA_PACKAGE_packagename=/some/path`` the ``__path__`` of "
"packages can be extended automatically in order to allow and load "
"uncompiled sources from another location. This can be e.g. a ``tests`` "
"sub-package or other plugins."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:141
msgid ""
"By default when creating a module, now also a ``module.pyi`` file is "
"created that contains all imported modules. This should be deployed "
"alongside the extension module, so that standalone mode creation can "
"benefit from knowing the dependencies of compiled code."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:146
msgid ""
"Added option ``--plugin-list`` that was mentioned in the help output, but"
" still missing so far."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:149
msgid ""
"The import tracing of the ``hints`` module has achieved experimental "
"status and can be used to test compatibility with regards to import "
"behavior."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:155
msgid "Cleanups"
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:157
msgid ""
"Rename tree and codegen ``Helper`` modules to unique names, making them "
"easier to work with."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:160
msgid ""
"Share the code that decides to not warn for standard library paths with "
"more warnings."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:163
msgid ""
"Use the ``bool`` enum definition of Python2 which is more elegant than "
"ours."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:166
msgid ""
"Move quality tools, autoformat, isort, etc. to the "
"``nuitka.tools.quality`` namespace."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:169
msgid "Move output comparison tool to the ``nuitka.tools.testing`` namespace."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:172
msgid ""
"Made frame code generation capable of using nested frames, allowing the "
"real inline of classes and contraction bodies, instead of \"direct\" "
"calls to pseudo functions being used."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:176
msgid ""
"Proper base classes for functions that are entry points, and functions "
"that are merely a local expression using return statements."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:181
msgid "Tests"
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:183
msgid "The search mode with pattern, was not working anymore."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:185
msgid "Resume hash values now consider the Python version too."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:187
msgid ""
"Added test that covers using test runners like ``nose`` and ``py.test`` "
"with Nuitka compiled extension modules."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:192
msgid "Organisational"
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:194
msgid ""
"Added support for Scons 3.0 and running Scons with Python3.5 or higher. "
"The option to specify the Python to use for scons has been renamed to "
"reflect that it may also be a Python3 now. Only for Python3.2 to "
"Python3.4 we now need another Python installation."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:199
msgid ""
"Made recursion the default for ``--recurse-directory`` with packages. "
"Before you also had to tell it to recurse into that package or else it "
"would only include the top level package, but nothing below."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:203
msgid ""
"Updated the man pages, correct mentions of its C++ to C and don't use now"
" deprecated options."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:206
msgid ""
"Updated the help output which still said that standalone mode implies "
"recursion into standard library, which is no longer true and even not "
"recommended."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:210
msgid ""
"Added option to disable the output of ``.pyi`` file when creating an "
"extension module."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:213
msgid "Removed Ubuntu Wily package download, no longer supported by Ubuntu."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:217
msgid "Summary"
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:219
msgid ""
"This release was done to get the fixes and new features out for testing. "
"There is work started that should make generators use an explicit extra "
"stack via pointer, and restore instruction state via goto dispatchers at "
"function entry, but that is not complete."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:224
msgid ""
"This feature, dubbed \"goto generators\" will remove the need for fibers "
"(which is itself a lot of code), reduce the memory footprint at run time "
"for anything that uses a lot of generators, or coroutines."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:228
msgid ""
"Integrating with ``distutils`` is also a new thing, and once completed "
"will make use of Nuitka for existing projects automatic and trivial to "
"do. There is a lot missing for that goal, but we will get there."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:232
msgid ""
"Also, documenting how to run tests against compiled code, if that test "
"code lives inside of that package, will make a huge difference, as that "
"will make it easier for people to torture Nuitka with their own test "
"cases."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:237
msgid ""
"And then of course, nested frames now mean that every function could be "
"inlined, which was previously not possible due to collisions of frames. "
"This will pave the route for better optimization in those cases in future"
" releases."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:242
msgid ""
"The experimental features will require more work, but should make it "
"easier to use Nuitka for existing projects. Future releases will make "
"integrating Nuitka dead simple, or that is the hope."
msgstr ""

#: ../../doc/posts/nuitka-release-0528.rst:246
msgid ""
"And last but not least, now that Scons works with Python3, chances are "
"that Nuitka will more often work out the of the box. The older Python3 "
"versions that still retain the issue are not very widespread."
msgstr ""

