# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-09 23:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../doc/posts/nuitka-release-068.rst:7
msgid "Nuitka Release 0.6.8"
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:9
msgid ""
"This is to inform you about the new stable release of `Nuitka "
"<https://nuitka.net>`_. It is the extremely compatible Python compiler, "
"`\"download now\" </doc/download.html>`_."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:13
msgid ""
"This releases contains important general improvements and performance "
"improvements and enhanced optimization as well as many bug fixes that "
"enhance the Python 3.8 compatibility."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:19
msgid "Bug Fixes"
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:21
msgid ""
"Python3.5+: Fix, coroutines and asyncgen could continue iteration of "
"awaited functions, even after their return, leading to wrong behaviour."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:25
msgid ""
"Python3.5+: Fix, absolute imports of names might also refer to modules "
"and need to be handled for module loading as well."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:28
msgid ""
"Fix, the ``fromlist`` of imports could loose references, potentially "
"leading to corruption of contained strings."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:31
msgid ""
"Python3.8: Fix, positional only arguments were not enforced to actually "
"be that way."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:34
msgid ""
"Python3.8: Fix, complex calls with star arguments that yielded the same "
"value twice, were not yet caught."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:37
msgid ""
"Python3.8: Fix, evaluation order for nested dictionary contractions was "
"not followed yet."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:40
msgid ""
"Windows: Use short paths, these work much better to load extension "
"modules and TCL parts of TkInter cannot handle unicode paths at all. This"
" makes Nuitka work in locations, where normal Python cannot."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:44
msgid "Windows: Fixup dependency walker in unicode input directories."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:46
msgid ""
"Standalone: Use frozen module loader only at ``libpython`` initialisation"
" and switch to built-in bytecode loader that is more compatible "
"afterwards, increasing compatibility."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:50
msgid "Standalone: Fix for pydanctic support."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:52
msgid "Standalone: Added missing hidden dependency of uvicorn."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:54
msgid "Fix, the parser for ``.pyi`` files couldn't handle multiline imports."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:56
msgid ""
"Windows: Derive linker arch of Python from running binary, since it can "
"happen that the Python binary is actually a script."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:59
msgid ""
"Fixup static linking with ``libpython.a`` that contains ``main.o`` by "
"making our colliding symbols for ``Py_GetArgcArgv`` weak."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:62
msgid ""
"Python3.7: Fix misdetection as asyncgen for a normal generator, if the "
"iterated value is async."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:65
msgid "Distutils: Fix ``build_nuitka`` for modules under nested namespaces."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:67
msgid ""
"OpenBSD: Follow usage of clang and other corrections to make accelerated "
"mode work."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:70
msgid "macOS: Fixup for standalone mode library scan."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:72
msgid "Fix, the logging of ``--show-modules`` was broken."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:74
msgid "Windows: Enable ``/bigobj`` mode for MSVC for large compilations to work."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:77
msgid "Windows: Fixup crash in warning with pefile dependency manager."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:79
msgid ""
"Windows: Fixup ``win32com`` standalone detection of other Python version "
"``win32com`` is in system ``PATH``."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:82
msgid "Fix, the python flag for static hashes didn't have the intended effect."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:85
msgid ""
"Fix, generators may be resurrected in the cause of their destruction, and"
" then must not be released."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:88
msgid ""
"Fix, method objects didn't implement the methods ``__reduce__`` and "
"``__reduce_ex__`` necessary for pickling them."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:91
msgid ""
"Windows: Fix, using a Python installation through a symlink was not "
"working."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:94
msgid "Windows: Fix, icon paths that were relative were not working anymore."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:96
msgid "Python3.8: Detect duplicate keywords yielded from star arguments."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:98
msgid "Fix, methods could not be pickled."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:100
msgid ""
"Fix, generators, coroutines and asyncgen might be resurrected during "
"their release, allow for that."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:103
msgid ""
"Fix, frames need to traverse their attached locals to be released in some"
" cases."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:108
msgid "New Features"
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:110
msgid ""
"Plugin command line handling now allows for proper ``optparse`` options "
"to be used, doing away with special parameter code for plugins. The "
"arguments now also become automatically passed to the instantiations of "
"plugins."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:115
msgid ""
"Loading and creation of plugins are now two separate phases. They are "
"loaded when they appear on the command line and can add options in their "
"own group, even required ones, but also with default values."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:119
msgid ""
"Started using logging with name-spaces. Applying logging per plugin to "
"make it easier to recognize which plugin said what. Warnings are now "
"colored in red."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:123
msgid ""
"Python3.5+: Added support for two step module loading, making Nuitka "
"loading even more compatible."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:126
msgid ""
"Enhanced import tracing to work on standalone binaries in a useful "
"manner, allow to compare with normal binaries."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:129
msgid ""
"Fix, the ``setattr`` built-in was leaking a reference to the ``None`` "
"value."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:134
msgid "Optimization"
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:136
msgid ""
"Proper loop SSA capable of detecting shapes with an incremental initial "
"phase and a final result of alternatives for variables written in the "
"loop. This detects shapes of manual integer incrementing loops correctly "
"now, it doesn't see through iterators yet, but this will come too."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:142
msgid ""
"Added type shapes for all operations and all important built-in types to "
"allow more compile time optimization and better target type selection."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:146
msgid ""
"Target type code generation was expanded from manual usage with "
"conditions to all operations allowing to get at bool target values more "
"directly."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:150
msgid ""
"For in-place operations, there is the infrastructure to generate them for"
" improved performance, but so far it's only used for Python2 int, and not"
" for the many types normal operations are supported."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:154
msgid ""
"Force usage of C boolean type for all indicator variables from the re-"
"formulation. In some cases, we are not yet there with detections, and "
"this gives instant benefit."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:158
msgid ""
"Complex constants didn't annotate their type shape, preventing compile "
"time optimization for them."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:161
msgid ""
"Python3.8: Also support vectorcall for compiled method objects. These are"
" rarely used in new Python, but can make a difference."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:164
msgid ""
"Remove loops that have only a final break. This happens in static "
"optimization in some cases, and allows more optimization to be done."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:167
msgid ""
"Avoid using a preparing a constant tuple value for calls with only "
"constant arguments."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:170
msgid ""
"Avoid using ``PyErr_Format`` where it's not necessary by adding "
"specialized helpers for common cases."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:173
msgid ""
"Detect ``del`` statements that will raise an exception and replace with "
"that."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:176
msgid "Exception matching is boolean shape, allowing for faster code generation."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:179
msgid "Disable recursion checks outside of full compat mode."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:181
msgid ""
"Avoid large blocks for conditional statements that only need to enclose "
"the condition evaluation."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:184
msgid ""
"Added shortcuts for interactions between compiled generator variants, to "
"avoid calls to their C methods with argument passing, etc."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:189
msgid "Organisational"
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:191
msgid ""
"Updated Developer Manual with changes that happened, removing the "
"obsolete language choice section."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:194
msgid "Added 3.8 support mentions in even more places."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:196
msgid ""
"The mailing list has been deleted. We now prefer Gitter chat and Github "
"issues for discussions."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:199
msgid ""
"Visual Code recommended extensions are now defined as such in the project"
" configuration and you will be prompted to install them."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:202
msgid ""
"Visual Code environents for ``Py38`` and ``Py27`` were added for easier "
"switch."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:205
msgid ""
"Catch usage of Python from the Microsoft App Store, it is not supported "
"and seems to limit access to the Python installation for security reasons"
" that make support impossible."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:209
msgid "Make it clear that ``--full-compat`` should not be used in help output."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:212
msgid ""
"Added instructions for MSVC runtimes and standalone compilation to "
"support Windows 7."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:215
msgid "More complete listing of copyright holders for Debian."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:217
msgid "Updated to newer black and PyLint."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:219
msgid "Enhanced gcc version check, properly works with gcc 10 and higher."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:223
msgid "Tests"
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:225
msgid "Pylint cleanups for some of the tests."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:227
msgid "Added test for loading of user plugins."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:229
msgid "Removed useless outputs for ``search`` mode skipping non-matches."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:233
msgid "Cleanups"
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:235
msgid ""
"Limit command line handling for multiprocessing module to when the plugin"
" is actually used, avoiding useless code of Windows binaries."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:238
msgid "Pylint cleanup also foreign code like ``oset`` and ``odict``."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:240
msgid ""
"In preparation of deprecating the alternative, ``--enable-plugin`` has "
"become the only form used in documentation and tests."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:243
msgid "Avoid numeric pylint symbols more often."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:245
msgid ""
"Distutils: Cleanup module name for distutils commands, these are not "
"actually enforced by distutils, but very ugly in our coding conventions."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:249
msgid ""
"The \"cannot get here\" code to mark unreachable code has been improved "
"and no longer needs an identifier passed, but uses the standard C "
"mechanism for that."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:253
msgid ""
"Removed accessors for lookup sources from nodes, allowing for faster "
"usage and making sure, lookups are only done where needed."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:258
msgid "Summary"
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:260
msgid ""
"This release is huge in terms of bugs fixed, but also extremely "
"important, because the new loop SSA and type tracing, allows for many "
"more specialized code usages. We now can trace the type for some loops to"
" be specifically an integer or long value only, and will become able to "
"generate code that avoids using Python objects, in these cases."
msgstr ""

#: ../../doc/posts/nuitka-release-068.rst:266
msgid ""
"Once that happens, the performance will make a big jump. Future releases "
"will have to consolidate the current state, but it is expected that at "
"least an experimental addition of C type ``float`` or ``C long`` can be "
"added, add to that ``iterator`` type shape and value analsis, and an "
"actual jump in performance can be expected."
msgstr ""

