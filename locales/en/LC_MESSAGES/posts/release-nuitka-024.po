# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-09 23:30+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../doc/posts/release-nuitka-024.rst:7
msgid "Nuitka Release 0.2.4"
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:9
msgid ""
"This is to inform you about the new stable release of `Nuitka "
"<https://nuitka.net>`_. It is the extremely compatible Python compiler, "
"`\"download now\" </doc/download.html>`_."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:13
msgid ""
"This release 0.2.4 is likely the last 0.2.x release, as it's the one that"
" achieved feature parity with CPython 2.6, which was the whole point of "
"the release series, so time to celebrate. I have stayed away (mostly) "
"from any optimization, so as to not be premature."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:18
msgid ""
"From now on speed optimization is going to be the focus though. Because "
"right now, frankly, there is not much of a point to use Nuitka yet, with "
"only a minor run time speed gain in trade for a long compile time. But "
"hopefully we can change that quickly now."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:25
msgid "New Features"
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:27
msgid ""
"The use of exec in a local function now adds local variables to scope it "
"is in."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:30
msgid ""
"The same applies to ``from module_name import *`` which is now compiled "
"correctly and adds variables to the local variables."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:35
msgid "Bug Fixes"
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:37
msgid ""
"Raises ``UnboundLocalError`` when deleting a local variable with ``del`` "
"twice."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:40
msgid "Raises ``NameError`` when deleting a global variable with ``del`` twice."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:43
msgid ""
"Read of to uninitialized closure variables gave ``NameError``, but "
"``UnboundLocalError`` is correct and raised now."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:48
msgid "Cleanups"
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:50
msgid ""
"There is now a dedicated pass over the node tree right before code "
"generation starts, so that some analysis can be done as late as that. "
"Currently this is used for determining which functions should have a "
"dictionary of locals."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:55
msgid ""
"Checking the exported symbols list, fixed all the cases where a "
"``static`` was missing. This reduces the \"module.so\" sizes."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:58
msgid ""
"With gcc the \"visibility=hidden\" is used to avoid exporting the helper "
"classes. Also reduces the \"module.so\" sizes, because classes cannot be "
"made static otherwise."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:64
msgid "New Tests"
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:66
msgid ""
"Added \"DoubleDeletions\" to cover behaviour of ``del``. It seems that "
"this is not part of the CPython test suite."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:69
msgid ""
"The \"OverflowFunctions\" (those with dynamic local variables) now has an"
" interesting test, exec on a local scope, effectively adding a local "
"variable while a closure variable is still accessible, and a module "
"variable too. This is also not in the CPython test suite."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:74
msgid ""
"Restored the parts of the CPython test suite that did local star imports "
"or exec to provide new variables. Previously these have been removed."
msgstr ""

#: ../../doc/posts/release-nuitka-024.rst:78
msgid ""
"Also \"test_with.py\" which covers PEP 343 has been reactivated, the with"
" statement works as expected."
msgstr ""

