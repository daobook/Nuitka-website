# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 15:55+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../posts/nuitka-release-0311.rst:7
msgid "Nuitka Release 0.3.11"
msgstr ""

#: ../../posts/nuitka-release-0311.rst:9
msgid ""
"This is to inform you about the new stable release of `Nuitka "
"<https://nuitka.net>`_. It is the extremely compatible Python compiler, "
"`\"download now\" </doc/download.html>`_."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:13
msgid ""
"This is to inform you about the new release of Nuitka with some bug fixes"
" and portability work."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:16
msgid ""
"This release is generally cleaning up things, and makes Nuitka portable "
"to ARM Linux. I used to host the Nuitka homepage on that machine, but now"
" that it's no longer so, I can run heavy compile jobs on it. To my "
"surprise, it found many portability problems. So I chose to fix that "
"first, the result being that Nuitka now works on ARM Linux too."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:24
msgid "Bug fixes"
msgstr ""

#: ../../posts/nuitka-release-0311.rst:26
msgid ""
"The order of slice expressions was not correct on x86 as well, and I "
"found that with new tests only. So the porting to ARM revealed a bug "
"category, I previously didn't consider."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:30
msgid ""
"The use of ``linux2`` in the Scons file is potentially incompatible with "
"Linux 3.0, although it seems that at least on Debian the ``sys.platform``"
" was changed back to ``linux2``. Anyway, it's probably best to allow just"
" anything that starts with ``linux`` these days."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:36
msgid ""
"The ``print`` statement worked like a ``print`` function, i.e. it first "
"evaluated all printed expressions, and did the output only then. That is "
"incompatible in case of exceptions, where partial outputs need to be "
"done, and so that got fixed."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:43
msgid "Optimization"
msgstr ""

#: ../../posts/nuitka-release-0311.rst:45
msgid ""
"Function calls now each have a dedicated helper function, avoiding in "
"some cases unnecessary work. We will may build further on this and in-"
"line ``PyObject_Call`` differently for the special cases."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:51
msgid "Cleanups"
msgstr ""

#: ../../posts/nuitka-release-0311.rst:53
msgid ""
"Moved many C++ helper declarations and in-line implementations to "
"dedicated header files for better organisation."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:56
msgid ""
"Some dependencies were removed and consolidated to make the dependency "
"graph sane."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:59
msgid ""
"Multiple decorators were in reverse order in the node tree. The code "
"generation reversed it back, so no bug, yet that was a distorted tree."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:63
msgid ""
"Finding this came from the ARM work, because the \"reversal\" was in fact"
" just the argument evaluation order of C++ under x86/x64, but on ARM that"
" broke. Correcting it highlighted this issue."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:67
msgid ""
"The deletion of slices, was not using ``Py_ssize`` for indexes, "
"disallowing some kinds of optimization, so that was harmonized."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:70
msgid ""
"The function call code generation got a general overhaul. It is now more "
"consistent, has more helpers available, and creates more readable code."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:74
msgid "PyLint is again happier than ever."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:78
msgid "New Tests"
msgstr ""

#: ../../posts/nuitka-release-0311.rst:80
msgid ""
"There is a new basic test ``OrderChecks`` that covers the order of "
"expression evaluation. These problems were otherwise very hard to detect,"
" and in some cases not previously covered at all."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:84
msgid ""
"Executing Nuitka with Python3 (it won't produce correct Python3 C/API "
"code) is now part of the release tests, so non-portable code of Nuitka "
"gets caught."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:90
msgid "Organisational"
msgstr ""

#: ../../posts/nuitka-release-0311.rst:92
msgid ""
"Support for ARM Linux. I will make a separate posting on the challenges "
"of this. Suffice to say now, that C++ leaves way too much things "
"unspecified."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:96
msgid ""
"The Nuitka git repository now uses \"git flow\". The new git policy will "
"be detailed in another `separate posting <https://nuitka.net/posts"
"/nuitka-git-flow.html>`__."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:100
msgid ""
"There is an unstable ``develop`` branch in which the development occurs. "
"For this release ca. 40 commits were done to this branch, before merging "
"it. I am also doing more fine grained commits now."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:104
msgid "Unlike previously, there is ``master`` branch for the stable release."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:106
msgid ""
"There is a script \"make-dependency-graph.sh\" (Update: meanwhile it was "
"renamed to \"make-dependency-graph.py\") to produce a dependency graphs "
"of Nuitka. I detected a couple of strange things through this."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:110
msgid ""
"The Python3 ``__pycache__`` directories get removed too by the cleanup "
"script."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:115
msgid "Numbers"
msgstr ""

#: ../../posts/nuitka-release-0311.rst:117
msgid ""
"We only have \"PyStone\" now, and on a new machine, so the numbers cannot"
" be compared to previous releases:"
msgstr ""

#: ../../posts/nuitka-release-0311.rst:120
msgid "python 2.6:"
msgstr ""

#: ../../posts/nuitka-release-0311.rst:127
msgid "Nuitka 0.3.11 (driven by python 2.6):"
msgstr ""

#: ../../posts/nuitka-release-0311.rst:134
msgid ""
"So this a speedup factor of 258%, last time on another machine it was "
"240%. Yet it only proves that the generated and compiled are more "
"efficient than bytecode, but Nuitka doesn't yet do the relevant "
"optimization. Only once it does, the factor will be significantly higher."
msgstr ""

#: ../../posts/nuitka-release-0311.rst:142
msgid "Summary"
msgstr ""

#: ../../posts/nuitka-release-0311.rst:144
msgid ""
"Overall, there is quite some progress. Nuitka is a lot cleaner now, which"
" will help us later only. I wanted to get this out, mostly because of the"
" bug fixes, and of course just in case somebody attempts to use it on "
"ARM."
msgstr ""

