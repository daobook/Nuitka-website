# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Kay Hayen and Nuitka Contributors
# This file is distributed under the same license as the Nuitka the Python
# Compiler package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Nuitka the Python Compiler \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 15:55+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../posts/nuitka-release-0512.rst:7
msgid "Nuitka Release 0.5.12"
msgstr ""

#: ../../posts/nuitka-release-0512.rst:9
msgid ""
"This is to inform you about the new stable release of `Nuitka "
"<https://nuitka.net>`_. It is the extremely compatible Python compiler, "
"`\"download now\" </doc/download.html>`_."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:13
msgid ""
"This release contains massive amounts of corrections for long standing "
"issues in the import recursion mechanism, as well as for standalone "
"issues now visible after the ``__file__`` and ``__path__`` values have "
"changed to become runtime dependent values."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:20
msgid "Bug Fixes"
msgstr ""

#: ../../posts/nuitka-release-0512.rst:22
msgid ""
"Fix, the ``__path__`` attribute for packages was still the original "
"filename's directory, even in file reference mode was ``runtime``."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:25
msgid ""
"The use of ``runtime`` as default file reference mode for executables, "
"even if not in standalone mode, was making acceleration harder than "
"necessary. Changed to ``original`` for that case. Fixed in 0.5.11.1 "
"already."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:30
msgid ""
"The constant value for the smallest ``int`` that is not yet a ``long`` is"
" created using ``1`` due to C compiler limitations, but ``1`` was not yet"
" initialized properly, if this was a global constant, i.e. used in "
"multiple modules. Fixed in 0.5.11.2 already."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:35
msgid ""
"Standalone: Recent fixes around ``__path__`` revealed issues with "
"PyWin32, where modules from ``win32com.shell`` were not properly recursed"
" to. Fixed in 0.5.11.2 already."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:39
msgid ""
"The importing of modules with the same name as a built-in module inside a"
" package falsely assumed these were the built-ins which need not exist, "
"and then didn't recurse into them. This affected standalone mode the "
"most, as the module was then missing entirely."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:49
msgid ""
"Similarly, the importing of modules with the same name as standard "
"library modules could go wrong."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:57
msgid ""
"Importing modules on Windows and macOS was not properly checking the "
"checking the case, making it associate wrong modules from files with "
"mismatching case."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:61
msgid ""
"Standalone: Importing with ``from __future__ import absolute_import`` "
"would prefer relative imports still."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:64
msgid ""
"Python3: Code generation for ``try``/``return expr``/``finally`` could "
"loose exceptions when ``expr`` raised an exception, leading to a "
"``RuntimeError`` for ``NULL`` return value. The real exception was lost."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:69
msgid ""
"Lambda expressions that were directly called with star arguments caused "
"the compiler to crash."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:78
msgid "Optimization"
msgstr ""

#: ../../posts/nuitka-release-0512.rst:80
msgid ""
"Focusing on compile time memory usage, cyclic dependencies of trace "
"merges that prevented them from being released, even when replaced were "
"removed."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:84
msgid ""
"More memory efficient updating of global SSA traces, reducing memory "
"usage during optimization by ca. 50%."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:87
msgid ""
"Code paths that cannot and therefore must not happen are now more clearly"
" indicated to the backend compiler, allowing for slightly better code to "
"be generated by it, as it can tell that certain code flows need not be "
"merged."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:94
msgid "New Features"
msgstr ""

#: ../../posts/nuitka-release-0512.rst:96
msgid ""
"Standalone: On systems, where ``.pth`` files inject Python packages at "
"launch, these are now detected, and taking into account. Previously "
"Nuitka did not recognize them, due to lack of ``__init__.py`` files. "
"These are mostly pip installations of e.g. ``zope.interface``."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:102
msgid ""
"Added option ``--explain-imports`` to debug the import resolution code of"
" Nuitka."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:105
msgid ""
"Added options ``--show-memory`` to display the amount of memory used in "
"total and how it's spread across the different node types during "
"compilation."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:109
msgid ""
"The option ``--trace-execution`` now also covers early program "
"initialisation before any Python code runs, to ease finding bugs in this "
"domain as well."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:115
msgid "Organisational"
msgstr ""

#: ../../posts/nuitka-release-0512.rst:117
msgid ""
"Changed default for file reference mode to ``original`` unless standalone"
" or module mode are used. For mere acceleration, breaking the reading of "
"data files from ``__file__`` is useless."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:121
msgid ""
"Added check that the in-line copy of scons is not run with Python3, which"
" is not supported. Nuitka works fine with Python3, but a Python2 is "
"required to execute scons."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:125
msgid "Discover more kinds of Python2 installations on Linux/macOS installations."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:128
msgid "Added instructions for macOS to the download page."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:132
msgid "Cleanups"
msgstr ""

#: ../../posts/nuitka-release-0512.rst:134
msgid ""
"Moved ``oset`` and ``odict`` modules which provide ordered sets and "
"dictionaries into a new package ``nuitka.container`` to clean up the top "
"level scope."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:138
msgid ""
"Moved ``SyntaxErrors`` to ``nuitka.tree`` package, where it is used to "
"format error messages."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:141
msgid ""
"Moved ``nuitka.Utils`` package to ``nuitka.utils.Utils`` creating a whole"
" package for utils, so as to better structure them for their purpose."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:147
msgid "Summary"
msgstr ""

#: ../../posts/nuitka-release-0512.rst:149
msgid ""
"This release is a major maintenance release. Support for namespace "
"modules injected by ``*.pth`` is a major step for new compatibility. The "
"import logic improvements expand the ability of standalone mode widely. "
"Many more use cases will now work out of the box, and less errors will be"
" found on case insensitive systems."
msgstr ""

#: ../../posts/nuitka-release-0512.rst:155
msgid ""
"There is aside of memory issues, no new optimization though as many of "
"these improvements could not be delivered as hotfixes (too invasive code "
"changes), and should be out to the users as a stable release. Real "
"optimization changes have been postponed to be next release."
msgstr ""

